syntax = "proto3";

option go_package = "github.com/numaproj/numaflow-go/pkg/apis/proto/function/reducefn";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package function.reducefn;

service Reduce {
  // ReduceFn applies a reduce function to a datum request stream.
  rpc ReduceFn(stream ReduceRequest) returns (stream ReduceResponseList);

  // IsReady is the heartbeat endpoint for gRPC.
  rpc IsReady(google.protobuf.Empty) returns (ReadyResponse);
}

message EventTime {
  // event_time is the time associated with each datum.
  google.protobuf.Timestamp event_time = 1;
  // future we can add an enum to represent whether the event time is
  // based on INGEST_TIME or EVENT_TIME or PROCESSING_TIME
}

message Watermark {
  // watermark is the monotonically increasing time which denotes completeness for the given time for the given vertex.
  google.protobuf.Timestamp watermark = 1;
  // future we can add LATE, ON_TIME etc.
}

/**
 * DatumRequest represents a datum request element.
 */
message ReduceRequest {
  repeated string keys = 1;
  bytes value = 2;
  EventTime event_time = 3;
  Watermark watermark = 4;
}

/**
 * DatumResponse represents a datum response element.
 */
message ReduceResponse {
  repeated string keys = 1;
  bytes value = 2;
  repeated string tags = 3;
}

/**
 * DatumResponseList represents a list of datum response elements.
 */
message ReduceResponseList {
  repeated ReduceResponse elements = 1;
}

/**
 * ReadyResponse is the health check result.
 */
message ReadyResponse {
  bool ready = 1;
}