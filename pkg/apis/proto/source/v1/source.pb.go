// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: pkg/apis/proto/source/v1/source.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Code to indicate the status of the response.
type ReadResponse_Status_Code int32

const (
	ReadResponse_Status_SUCCESS ReadResponse_Status_Code = 0
	ReadResponse_Status_FAILURE ReadResponse_Status_Code = 1
)

// Enum value maps for ReadResponse_Status_Code.
var (
	ReadResponse_Status_Code_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
	}
	ReadResponse_Status_Code_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
	}
)

func (x ReadResponse_Status_Code) Enum() *ReadResponse_Status_Code {
	p := new(ReadResponse_Status_Code)
	*p = x
	return p
}

func (x ReadResponse_Status_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadResponse_Status_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_proto_source_v1_source_proto_enumTypes[0].Descriptor()
}

func (ReadResponse_Status_Code) Type() protoreflect.EnumType {
	return &file_pkg_apis_proto_source_v1_source_proto_enumTypes[0]
}

func (x ReadResponse_Status_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadResponse_Status_Code.Descriptor instead.
func (ReadResponse_Status_Code) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{2, 1, 0}
}

// Error to indicate the error type. If the code is FAILURE, then the error field will be populated.
type ReadResponse_Status_Error int32

const (
	ReadResponse_Status_UNACKED ReadResponse_Status_Error = 0
	ReadResponse_Status_OTHER   ReadResponse_Status_Error = 1
)

// Enum value maps for ReadResponse_Status_Error.
var (
	ReadResponse_Status_Error_name = map[int32]string{
		0: "UNACKED",
		1: "OTHER",
	}
	ReadResponse_Status_Error_value = map[string]int32{
		"UNACKED": 0,
		"OTHER":   1,
	}
)

func (x ReadResponse_Status_Error) Enum() *ReadResponse_Status_Error {
	p := new(ReadResponse_Status_Error)
	*p = x
	return p
}

func (x ReadResponse_Status_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadResponse_Status_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_proto_source_v1_source_proto_enumTypes[1].Descriptor()
}

func (ReadResponse_Status_Error) Type() protoreflect.EnumType {
	return &file_pkg_apis_proto_source_v1_source_proto_enumTypes[1]
}

func (x ReadResponse_Status_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadResponse_Status_Error.Descriptor instead.
func (ReadResponse_Status_Error) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{2, 1, 1}
}

// Handshake message between client and server to indicate the start of transmission.
type Handshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field indicating the start of transmission.
	Sot bool `protobuf:"varint,1,opt,name=sot,proto3" json:"sot,omitempty"`
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{0}
}

func (x *Handshake) GetSot() bool {
	if x != nil {
		return x.Sot
	}
	return false
}

// ReadRequest is the request for reading datum stream from user defined source.
type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field indicating the request.
	Request   *ReadRequest_Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Handshake *Handshake           `protobuf:"bytes,2,opt,name=handshake,proto3,oneof" json:"handshake,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{1}
}

func (x *ReadRequest) GetRequest() *ReadRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ReadRequest) GetHandshake() *Handshake {
	if x != nil {
		return x.Handshake
	}
	return nil
}

// ReadResponse is the response for reading datum stream from user defined source.
type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the result.
	Result *ReadResponse_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// Status of the response. Holds the end of transmission flag and the status code.
	Status *ReadResponse_Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Handshake message between client and server to indicate the start of transmission.
	Handshake *Handshake `protobuf:"bytes,3,opt,name=handshake,proto3,oneof" json:"handshake,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{2}
}

func (x *ReadResponse) GetResult() *ReadResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReadResponse) GetStatus() *ReadResponse_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReadResponse) GetHandshake() *Handshake {
	if x != nil {
		return x.Handshake
	}
	return nil
}

// AckRequest is the request for acknowledging datum.
// It takes a list of offsets to be acknowledged.
type AckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the request. The list will be ordered and will have the same order as the original Read response.
	Request   *AckRequest_Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Handshake *Handshake          `protobuf:"bytes,2,opt,name=handshake,proto3,oneof" json:"handshake,omitempty"`
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{3}
}

func (x *AckRequest) GetRequest() *AckRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AckRequest) GetHandshake() *Handshake {
	if x != nil {
		return x.Handshake
	}
	return nil
}

// AckResponse is the response for acknowledging datum. It contains one empty field confirming
// the batch of offsets that have been successfully acknowledged. The contract between client and server
// is that the server will only return the AckResponse if the ack request is successful.
// If the server hangs during the ack request, the client can decide to timeout and error out the data forwarder.
// The reason why we define such contract is that we always expect the server to be able to process the ack request.
// Client is expected to send the AckRequest to the server with offsets that are strictly
// corresponding to the previously read batch. If the client sends the AckRequest with offsets that are not,
// it is considered as a client error and the server will not return the AckResponse.
type AckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the result.
	Result *AckResponse_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// Handshake message between client and server to indicate the start of transmission.
	Handshake *Handshake `protobuf:"bytes,2,opt,name=handshake,proto3,oneof" json:"handshake,omitempty"`
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{4}
}

func (x *AckResponse) GetResult() *AckResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AckResponse) GetHandshake() *Handshake {
	if x != nil {
		return x.Handshake
	}
	return nil
}

// ReadyResponse is the health check result for user defined source.
type ReadyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the health check result.
	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *ReadyResponse) Reset() {
	*x = ReadyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyResponse) ProtoMessage() {}

func (x *ReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyResponse.ProtoReflect.Descriptor instead.
func (*ReadyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{5}
}

func (x *ReadyResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// PendingResponse is the response for the pending request.
type PendingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the result.
	Result *PendingResponse_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PendingResponse) Reset() {
	*x = PendingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingResponse) ProtoMessage() {}

func (x *PendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingResponse.ProtoReflect.Descriptor instead.
func (*PendingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{6}
}

func (x *PendingResponse) GetResult() *PendingResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// PartitionsResponse is the response for the partitions request.
type PartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the result.
	Result *PartitionsResponse_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PartitionsResponse) Reset() {
	*x = PartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionsResponse) ProtoMessage() {}

func (x *PartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionsResponse.ProtoReflect.Descriptor instead.
func (*PartitionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{7}
}

func (x *PartitionsResponse) GetResult() *PartitionsResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// Offset is the offset of the datum.
type Offset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// offset is the offset of the datum. This field is required.
	// We define Offset as a byte array because different input data sources can have different representations for Offset.
	// The only way to generalize it is to define it as a byte array,
	// Such that we can let the UDSource to de-serialize the offset using its own interpretation logics.
	Offset []byte `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Optional partition_id indicates which partition of the source the datum belongs to.
	// It is useful for sources that have multiple partitions. e.g. Kafka.
	// If the partition_id is not specified, it is assumed that the source has a single partition.
	PartitionId int32 `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *Offset) Reset() {
	*x = Offset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offset) ProtoMessage() {}

func (x *Offset) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offset.ProtoReflect.Descriptor instead.
func (*Offset) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{8}
}

func (x *Offset) GetOffset() []byte {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *Offset) GetPartitionId() int32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type ReadRequest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field indicating the number of records to read.
	NumRecords uint64 `protobuf:"varint,1,opt,name=num_records,json=numRecords,proto3" json:"num_records,omitempty"`
	// Required field indicating the request timeout in milliseconds.
	// uint32 can represent 2^32 milliseconds, which is about 49 days.
	// We don't use uint64 because time.Duration takes int64 as nano seconds. Using uint64 for milli will cause overflow.
	TimeoutInMs uint32 `protobuf:"varint,2,opt,name=timeout_in_ms,json=timeoutInMs,proto3" json:"timeout_in_ms,omitempty"`
}

func (x *ReadRequest_Request) Reset() {
	*x = ReadRequest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest_Request) ProtoMessage() {}

func (x *ReadRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest_Request.ProtoReflect.Descriptor instead.
func (*ReadRequest_Request) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ReadRequest_Request) GetNumRecords() uint64 {
	if x != nil {
		return x.NumRecords
	}
	return 0
}

func (x *ReadRequest_Request) GetTimeoutInMs() uint32 {
	if x != nil {
		return x.TimeoutInMs
	}
	return 0
}

type ReadResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the payload of the datum.
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// Required field indicating the offset information of the datum.
	Offset *Offset `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Required field representing the time associated with each datum. It is used for watermarking.
	EventTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// Optional list of keys associated with the datum.
	// Key is the "key" attribute in (key,value) as in the map-reduce paradigm.
	// We add this optional field to support the use case where the user defined source can provide keys for the datum.
	// e.g. Kafka and Redis Stream message usually include information about the keys.
	Keys []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	// Optional list of headers associated with the datum.
	// Headers are the metadata associated with the datum.
	// e.g. Kafka and Redis Stream message usually include information about the headers.
	Headers map[string]string `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReadResponse_Result) Reset() {
	*x = ReadResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse_Result) ProtoMessage() {}

func (x *ReadResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse_Result.ProtoReflect.Descriptor instead.
func (*ReadResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReadResponse_Result) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ReadResponse_Result) GetOffset() *Offset {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ReadResponse_Result) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *ReadResponse_Result) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReadResponse_Result) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ReadResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// End of transmission flag.
	Eot   bool                       `protobuf:"varint,1,opt,name=eot,proto3" json:"eot,omitempty"`
	Code  ReadResponse_Status_Code   `protobuf:"varint,2,opt,name=code,proto3,enum=source.v1.ReadResponse_Status_Code" json:"code,omitempty"`
	Error *ReadResponse_Status_Error `protobuf:"varint,3,opt,name=error,proto3,enum=source.v1.ReadResponse_Status_Error,oneof" json:"error,omitempty"`
	Msg   *string                    `protobuf:"bytes,4,opt,name=msg,proto3,oneof" json:"msg,omitempty"`
}

func (x *ReadResponse_Status) Reset() {
	*x = ReadResponse_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse_Status) ProtoMessage() {}

func (x *ReadResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse_Status.ProtoReflect.Descriptor instead.
func (*ReadResponse_Status) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ReadResponse_Status) GetEot() bool {
	if x != nil {
		return x.Eot
	}
	return false
}

func (x *ReadResponse_Status) GetCode() ReadResponse_Status_Code {
	if x != nil {
		return x.Code
	}
	return ReadResponse_Status_SUCCESS
}

func (x *ReadResponse_Status) GetError() ReadResponse_Status_Error {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ReadResponse_Status_UNACKED
}

func (x *ReadResponse_Status) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

type AckRequest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the offset to be acked
	Offsets []*Offset `protobuf:"bytes,1,rep,name=offsets,proto3" json:"offsets,omitempty"`
}

func (x *AckRequest_Request) Reset() {
	*x = AckRequest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest_Request) ProtoMessage() {}

func (x *AckRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest_Request.ProtoReflect.Descriptor instead.
func (*AckRequest_Request) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AckRequest_Request) GetOffsets() []*Offset {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type AckResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field indicating the ack request is successful.
	Success *emptypb.Empty `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AckResponse_Result) Reset() {
	*x = AckResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse_Result) ProtoMessage() {}

func (x *AckResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse_Result.ProtoReflect.Descriptor instead.
func (*AckResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AckResponse_Result) GetSuccess() *emptypb.Empty {
	if x != nil {
		return x.Success
	}
	return nil
}

type PendingResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the number of pending records at the user defined source.
	// A negative count indicates that the pending information is not available.
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PendingResponse_Result) Reset() {
	*x = PendingResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingResponse_Result) ProtoMessage() {}

func (x *PendingResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingResponse_Result.ProtoReflect.Descriptor instead.
func (*PendingResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PendingResponse_Result) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PartitionsResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required field holding the list of partitions.
	Partitions []int32 `protobuf:"varint,1,rep,packed,name=partitions,proto3" json:"partitions,omitempty"`
}

func (x *PartitionsResponse_Result) Reset() {
	*x = PartitionsResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartitionsResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionsResponse_Result) ProtoMessage() {}

func (x *PartitionsResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_source_v1_source_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionsResponse_Result.ProtoReflect.Descriptor instead.
func (*PartitionsResponse_Result) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP(), []int{7, 0}
}

func (x *PartitionsResponse_Result) GetPartitions() []int32 {
	if x != nil {
		return x.Partitions
	}
	return nil
}

var File_pkg_apis_proto_source_v1_source_proto protoreflect.FileDescriptor

var file_pkg_apis_proto_source_v1_source_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1d, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x6f, 0x74, 0x22,
	0xde, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x88,
	0x01, 0x01, 0x1a, 0x4e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e,
	0x4d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x22, 0xea, 0x05, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x9f, 0x02, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x29, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x80, 0x02, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x22, 0x20, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x22, 0x1f, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x41, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x73, 0x67, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0xc4, 0x01,
	0x0a, 0x0a, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x36,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x07, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x68,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x88, 0x01, 0x01, 0x1a, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x25,
	0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x6c, 0x0a, 0x0f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x1a, 0x1e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x28, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x43, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xc8, 0x02, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x3d, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x46, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x3a, 0x0a, 0x05, 0x41, 0x63, 0x6b, 0x46, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x09,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6e, 0x75, 0x6d, 0x61, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x6e, 0x75, 0x6d, 0x61, 0x66, 0x6c, 0x6f,
	0x77, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_proto_source_v1_source_proto_rawDescOnce sync.Once
	file_pkg_apis_proto_source_v1_source_proto_rawDescData = file_pkg_apis_proto_source_v1_source_proto_rawDesc
)

func file_pkg_apis_proto_source_v1_source_proto_rawDescGZIP() []byte {
	file_pkg_apis_proto_source_v1_source_proto_rawDescOnce.Do(func() {
		file_pkg_apis_proto_source_v1_source_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_proto_source_v1_source_proto_rawDescData)
	})
	return file_pkg_apis_proto_source_v1_source_proto_rawDescData
}

var file_pkg_apis_proto_source_v1_source_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_apis_proto_source_v1_source_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_apis_proto_source_v1_source_proto_goTypes = []any{
	(ReadResponse_Status_Code)(0),     // 0: source.v1.ReadResponse.Status.Code
	(ReadResponse_Status_Error)(0),    // 1: source.v1.ReadResponse.Status.Error
	(*Handshake)(nil),                 // 2: source.v1.Handshake
	(*ReadRequest)(nil),               // 3: source.v1.ReadRequest
	(*ReadResponse)(nil),              // 4: source.v1.ReadResponse
	(*AckRequest)(nil),                // 5: source.v1.AckRequest
	(*AckResponse)(nil),               // 6: source.v1.AckResponse
	(*ReadyResponse)(nil),             // 7: source.v1.ReadyResponse
	(*PendingResponse)(nil),           // 8: source.v1.PendingResponse
	(*PartitionsResponse)(nil),        // 9: source.v1.PartitionsResponse
	(*Offset)(nil),                    // 10: source.v1.Offset
	(*ReadRequest_Request)(nil),       // 11: source.v1.ReadRequest.Request
	(*ReadResponse_Result)(nil),       // 12: source.v1.ReadResponse.Result
	(*ReadResponse_Status)(nil),       // 13: source.v1.ReadResponse.Status
	nil,                               // 14: source.v1.ReadResponse.Result.HeadersEntry
	(*AckRequest_Request)(nil),        // 15: source.v1.AckRequest.Request
	(*AckResponse_Result)(nil),        // 16: source.v1.AckResponse.Result
	(*PendingResponse_Result)(nil),    // 17: source.v1.PendingResponse.Result
	(*PartitionsResponse_Result)(nil), // 18: source.v1.PartitionsResponse.Result
	(*timestamppb.Timestamp)(nil),     // 19: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 20: google.protobuf.Empty
}
var file_pkg_apis_proto_source_v1_source_proto_depIdxs = []int32{
	11, // 0: source.v1.ReadRequest.request:type_name -> source.v1.ReadRequest.Request
	2,  // 1: source.v1.ReadRequest.handshake:type_name -> source.v1.Handshake
	12, // 2: source.v1.ReadResponse.result:type_name -> source.v1.ReadResponse.Result
	13, // 3: source.v1.ReadResponse.status:type_name -> source.v1.ReadResponse.Status
	2,  // 4: source.v1.ReadResponse.handshake:type_name -> source.v1.Handshake
	15, // 5: source.v1.AckRequest.request:type_name -> source.v1.AckRequest.Request
	2,  // 6: source.v1.AckRequest.handshake:type_name -> source.v1.Handshake
	16, // 7: source.v1.AckResponse.result:type_name -> source.v1.AckResponse.Result
	2,  // 8: source.v1.AckResponse.handshake:type_name -> source.v1.Handshake
	17, // 9: source.v1.PendingResponse.result:type_name -> source.v1.PendingResponse.Result
	18, // 10: source.v1.PartitionsResponse.result:type_name -> source.v1.PartitionsResponse.Result
	10, // 11: source.v1.ReadResponse.Result.offset:type_name -> source.v1.Offset
	19, // 12: source.v1.ReadResponse.Result.event_time:type_name -> google.protobuf.Timestamp
	14, // 13: source.v1.ReadResponse.Result.headers:type_name -> source.v1.ReadResponse.Result.HeadersEntry
	0,  // 14: source.v1.ReadResponse.Status.code:type_name -> source.v1.ReadResponse.Status.Code
	1,  // 15: source.v1.ReadResponse.Status.error:type_name -> source.v1.ReadResponse.Status.Error
	10, // 16: source.v1.AckRequest.Request.offsets:type_name -> source.v1.Offset
	20, // 17: source.v1.AckResponse.Result.success:type_name -> google.protobuf.Empty
	3,  // 18: source.v1.Source.ReadFn:input_type -> source.v1.ReadRequest
	5,  // 19: source.v1.Source.AckFn:input_type -> source.v1.AckRequest
	20, // 20: source.v1.Source.PendingFn:input_type -> google.protobuf.Empty
	20, // 21: source.v1.Source.PartitionsFn:input_type -> google.protobuf.Empty
	20, // 22: source.v1.Source.IsReady:input_type -> google.protobuf.Empty
	4,  // 23: source.v1.Source.ReadFn:output_type -> source.v1.ReadResponse
	6,  // 24: source.v1.Source.AckFn:output_type -> source.v1.AckResponse
	8,  // 25: source.v1.Source.PendingFn:output_type -> source.v1.PendingResponse
	9,  // 26: source.v1.Source.PartitionsFn:output_type -> source.v1.PartitionsResponse
	7,  // 27: source.v1.Source.IsReady:output_type -> source.v1.ReadyResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pkg_apis_proto_source_v1_source_proto_init() }
func file_pkg_apis_proto_source_v1_source_proto_init() {
	if File_pkg_apis_proto_source_v1_source_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Handshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ReadyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PendingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Offset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReadRequest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReadResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReadResponse_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AckRequest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AckResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PendingResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_source_v1_source_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PartitionsResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_apis_proto_source_v1_source_proto_msgTypes[1].OneofWrappers = []any{}
	file_pkg_apis_proto_source_v1_source_proto_msgTypes[2].OneofWrappers = []any{}
	file_pkg_apis_proto_source_v1_source_proto_msgTypes[3].OneofWrappers = []any{}
	file_pkg_apis_proto_source_v1_source_proto_msgTypes[4].OneofWrappers = []any{}
	file_pkg_apis_proto_source_v1_source_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_proto_source_v1_source_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_proto_source_v1_source_proto_goTypes,
		DependencyIndexes: file_pkg_apis_proto_source_v1_source_proto_depIdxs,
		EnumInfos:         file_pkg_apis_proto_source_v1_source_proto_enumTypes,
		MessageInfos:      file_pkg_apis_proto_source_v1_source_proto_msgTypes,
	}.Build()
	File_pkg_apis_proto_source_v1_source_proto = out.File
	file_pkg_apis_proto_source_v1_source_proto_rawDesc = nil
	file_pkg_apis_proto_source_v1_source_proto_goTypes = nil
	file_pkg_apis_proto_source_v1_source_proto_depIdxs = nil
}
