syntax = "proto3";

option go_package = "github.com/numaproj/numaflow-go/pkg/apis/proto/sinkfn";

import "google/protobuf/empty.proto";
import "pkg/apis/proto/common/common.proto";

package sinkfn;

service Sink {
  // SinkFn writes the request to a user defined sink.
  rpc SinkFn(stream SinkRequest) returns (SinkResponseList);

  // IsReady is the heartbeat endpoint for gRPC.
  rpc IsReady(google.protobuf.Empty) returns (ReadyResponse);
}

/**
 * SinkRequest represents a request element.
 */
message SinkRequest {
  repeated string keys = 1;
  bytes value = 2;
  common.EventTime event_time = 3;
  common.Watermark watermark = 4;
  string id = 5;
}

/**
 * ReadyResponse is the health check result.
 */
message ReadyResponse {
  bool ready = 1;
}

/**
 * SinkResponse is the individual response of each message written to the sink.
 */
message SinkResponse {
  // id is the ID of the message, can be used to uniquely identify the message.
  string id = 1;
  // success denotes the status of persisting to disk. if set to false, it means writing to sink for the message failed.
  bool success = 2;
  // err_msg is the error message, set it if success is set to false.
  string err_msg = 3;
}

/**
 * SinkResponseList is the list of responses. The number of elements in this list will be equal to the number of requests
 * passed to the SinkFn.
 */
message SinkResponseList {
  repeated SinkResponse responses = 1;
}